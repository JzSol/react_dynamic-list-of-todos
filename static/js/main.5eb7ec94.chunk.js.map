{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","visibleTodos","handleShowTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","switcher","query","setQuery","onChange","value","placeholder","e","target","style","pointerEvents","length","Loader","TodoModal","setOpenModal","selectedTodo","selectedUser","modalIsLoading","openModal","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","isLoading","setIsLoading","setModalIsLoading","todos","setTodos","setSelectedTodo","setSelectedUser","filter","setFilter","allTodos","sortUnfinished","sortFinished","toLowerCase","includes","useEffect","data","finally","userId","event","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5eb7ec94.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  visibleTodos: Todo[];\n  handleShowTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ visibleTodos, handleShowTodo }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {visibleTodos.map((todo) => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className=\"\"\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            {todo.completed && (\n              <span\n                className=\"icon\"\n                data-cy=\"iconCompleted\"\n              >\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => handleShowTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { ChangeEventHandler, Dispatch, SetStateAction } from 'react';\n\ntype Props = {\n  switcher: ChangeEventHandler<HTMLSelectElement>;\n  query: string;\n  setQuery: Dispatch<SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ switcher, query, setQuery }) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={switcher}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span\n          className=\"icon is-right\"\n          style={{ pointerEvents: 'all' }}\n        >\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {query.length > 0 ? (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n              aria-label=\"Clear Query\"\n            />\n          ) : (\n            ''\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div\n    className=\"Loader\"\n    data-cy=\"loader\"\n  >\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  setOpenModal: React.Dispatch<React.SetStateAction<boolean>>;\n  modalIsLoading: boolean;\n  selectedTodo: Todo | null;\n  selectedUser: User | null;\n  openModal: boolean;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setOpenModal,\n  selectedTodo,\n  selectedUser,\n  modalIsLoading,\n  openModal,\n}) => {\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n      {modalIsLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            {openModal && (\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setOpenModal(false)}\n                aria-label=\"Close Modal\"\n              />\n            )}\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p\n              className=\"block\"\n              data-cy=\"modal-title\"\n            >\n              {selectedTodo?.title}\n            </p>\n\n            <p\n              className=\"block\"\n              data-cy=\"modal-user\"\n            >\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>{selectedUser?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\n// eslint-disable-next-line\nconst BASE_URL =\n  'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then((res) => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [modalIsLoading, setModalIsLoading] = useState<boolean>(true);\n  const [openModal, setOpenModal] = useState<boolean>(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [filter, setFilter] = useState(todos);\n  const [query, setQuery] = useState('');\n\n  const allTodos = [...todos];\n\n  function sortUnfinished() {\n    return [...allTodos].filter((todo) => todo.completed === false);\n  }\n\n  function sortFinished() {\n    return [...allTodos].filter((todo) => todo.completed === true);\n  }\n\n  function switcher(event: React.ChangeEvent<HTMLSelectElement>) {\n    const { value } = event.target;\n\n    if (value === 'active') {\n      setFilter(sortUnfinished);\n    } else if (value === 'completed') {\n      setFilter(sortFinished);\n    } else {\n      // if the \"All\" option is selected, show all todos\n      setFilter(todos);\n    }\n  }\n\n  const visibleTodos = filter.filter((todo) => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then((data) => {\n        setTodos(data);\n        setFilter(data);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  useEffect(() => {\n    setModalIsLoading(true);\n\n    if (selectedTodo?.userId) {\n      getUser(selectedTodo?.userId)\n        .then((data) => {\n          setSelectedUser(data);\n        })\n        .finally(() => setModalIsLoading(false));\n    }\n  }, [selectedTodo]);\n\n  const handleShowTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setOpenModal(true);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                // eslint-disable-next-line\n                switcher={switcher}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                visibleTodos={visibleTodos}\n                handleShowTodo={handleShowTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {openModal && (\n        <TodoModal\n          setOpenModal={setOpenModal}\n          selectedTodo={selectedTodo}\n          selectedUser={selectedUser}\n          modalIsLoading={modalIsLoading}\n          openModal={openModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}